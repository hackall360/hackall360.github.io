---
interface Project {
  slug: string;
  name: string;
  description?: string | null;
  tags?: string[];
  stars?: number;
  forks?: number;
  contributions?: number;
  language?: string | null;
  languages?: Array<{
    name: string;
    percentage?: number;
    bytes?: number;
  }>;
  totalLanguageBytes?: number;
  url: string;
  caseStudy?: string | null;
}

interface Props {
  project: Project;
}

const { project } = Astro.props as Props;
const tags = project.tags ?? [];
const languageBreakdown = (project.languages ?? []).map((entry) => ({
  name: entry.name,
  percentage: Number.isFinite(entry.percentage) ? Number(entry.percentage) : 0,
  bytes: Number.isFinite(entry.bytes) ? Number(entry.bytes) : undefined,
  width: `${Math.max(0.8, Math.min(100, Number(entry.percentage ?? 0)))}%`
}));
const primaryLanguage = languageBreakdown[0]?.name ?? project.language ?? 'Language agnostic';
const description =
  project.description?.trim() || 'This project is still getting its full write-up. Stay tuned!';
const stars = typeof project.stars === 'number' ? project.stars : 0;
const forks = typeof project.forks === 'number' ? project.forks : 0;
const contributions = typeof project.contributions === 'number' ? project.contributions : 0;
const formatNumber = (value: number) => new Intl.NumberFormat('en-US').format(value);

const stats: Array<{
  label: string;
  value: number;
  icon: 'contributions' | 'star' | 'fork';
}> = [
  { label: 'Contributions', value: contributions, icon: 'contributions' },
  { label: 'Stars', value: stars, icon: 'star' },
  { label: 'Forks', value: forks, icon: 'fork' }
];
---
<article
  data-project-card
  data-tags={tags.map((tag) => tag.toLowerCase()).join(',')}
  data-motion-child
  data-motion-direction="up"
  class="group flex w-full flex-col justify-between rounded-3xl border border-accent/15 bg-surface-highlight/70 p-6 text-neutral-emphasis shadow-[0_30px_90px_-45px_rgba(34,211,238,0.4)] transition duration-300 ease-spring-out hover:border-accent/60 hover:shadow-glow focus-within:border-accent/60"
>
  <header class="flex flex-col gap-3 sm:flex-row sm:items-start sm:justify-between">
    <span class="inline-flex items-center gap-2 self-start rounded-full border border-accent/20 bg-surface-overlay/80 px-3 py-1 text-xs font-semibold uppercase tracking-wide text-accent-light shadow-inner shadow-slate-950/40 transition group-hover:border-accent/60 group-hover:text-accent">
      <span class="size-2 rounded-full bg-accent-light shadow-[0_0_12px_rgba(34,211,238,0.6)]"></span>
      {primaryLanguage}
    </span>
    <dl class="flex flex-wrap items-center gap-2 text-xs font-semibold text-neutral-soft">
      {stats.map((stat) => (
        <div class="inline-flex items-center gap-2 rounded-full bg-surface-overlay/70 px-2.5 py-1" key={stat.label}>
          <dt class="sr-only">{stat.label}:</dt>
          <span class:list={{
            'flex items-center justify-center': true,
            'text-accent-light': stat.icon === 'contributions',
            'text-amber-300': stat.icon === 'star',
            'text-sky-300': stat.icon === 'fork'
          }}>
            {stat.icon === 'contributions' ? (
              <svg class="h-[clamp(1.75rem,3.5vw,2rem)] w-[clamp(1.75rem,3.5vw,2rem)]" viewBox="0 0 24 24" aria-hidden="true" focusable="false">
                <path
                  fill="currentColor"
                  d="M6 7a3 3 0 1 1 4-2.646V9.26A3 3 0 0 1 13 12h5.268A3 3 0 1 1 18 14H8a3 3 0 0 1-2-5.268V7Z"
                />
              </svg>
            ) : stat.icon === 'fork' ? (
              <svg class="h-[clamp(1.75rem,3.5vw,2rem)] w-[clamp(1.75rem,3.5vw,2rem)]" viewBox="0 0 24 24" aria-hidden="true" focusable="false">
                <path
                  fill="currentColor"
                  d="M7 3a2 2 0 1 1-.94 3.745A3.01 3.01 0 0 0 9 9v2h6V9a3.01 3.01 0 0 0 2.94-2.255A2 2 0 1 1 19 5a2 2 0 0 1-3 1.732V11a2 2 0 0 1-2 2h-1v2.268a2 2 0 1 1-2 0V13H8a2 2 0 0 1-2-2V6.732A2 2 0 1 1 7 3Z"
                />
              </svg>
            ) : (
              <svg class="h-[clamp(1.75rem,3.5vw,2rem)] w-[clamp(1.75rem,3.5vw,2rem)]" viewBox="0 0 24 24" aria-hidden="true" focusable="false">
                <path
                  fill="currentColor"
                  d="M12 3.75l2.167 4.39 4.848.707-3.508 3.42.828 4.822L12 14.938l-4.335 2.151.828-4.822-3.508-3.42 4.848-.707z"
                />
              </svg>
            )}
          </span>
          <dd class="tabular-nums">
            {formatNumber(stat.value)}
          </dd>
        </div>
      ))}
    </dl>
  </header>

  <div class="mt-6 space-y-5">
    <h3 class="break-words text-xl font-semibold text-white transition group-hover:text-accent-light">
      <a class="break-words outline-none focus-visible:outline-none" href={project.url} target="_blank" rel="noreferrer">
        {project.name}
      </a>
    </h3>
    <p class="break-words text-sm leading-relaxed text-neutral-soft">{description}</p>
    {languageBreakdown.length > 0 && (
      <div class="space-y-2">
        <p class="text-xs font-semibold uppercase tracking-wide text-neutral-soft">Top languages</p>
        <ul class="space-y-2" role="list">
          {languageBreakdown.map((entry) => (
            <li class="flex items-center gap-3 text-xs text-neutral-soft" key={entry.name}>
              <span class="relative flex-1 overflow-hidden rounded-full bg-surface-overlay/60">
                <span
                  class="block h-2 rounded-full bg-accent-light transition-all duration-300 ease-spring-out"
                  style={`width: ${entry.width}`}
                  aria-hidden="true"
                />
              </span>
              <span class="w-24 text-right font-medium text-neutral-emphasis">{entry.name}</span>
              <span class="w-12 text-right tabular-nums">{entry.percentage}%</span>
            </li>
          ))}
        </ul>
      </div>
    )}
    {tags.length > 0 && (
      <ul class="flex flex-wrap gap-2">
        {tags.map((tag) => (
          <li class="text-xs">
            <span class="inline-flex items-center rounded-full border border-accent/20 bg-surface-overlay/70 px-3 py-1 text-[0.7rem] font-medium uppercase tracking-wide text-neutral-emphasis transition group-hover:border-accent/50 group-hover:text-accent-light">
              {tag}
            </span>
          </li>
        ))}
      </ul>
    )}
  </div>

  <footer class="mt-6 flex flex-wrap items-center gap-3">
    <a
      class="inline-flex items-center justify-center gap-3 rounded-full border border-transparent bg-accent px-4 py-2 text-sm font-semibold text-slate-950 shadow-sm shadow-accent/30 transition duration-200 ease-spring-out hover:bg-accent-light focus-visible:outline-none"
      href={project.url}
      target="_blank"
      rel="noreferrer"
    >
      View on GitHub
      <svg class="h-[clamp(1.75rem,3.5vw,2rem)] w-[clamp(1.75rem,3.5vw,2rem)]" viewBox="0 0 24 24" aria-hidden="true" focusable="false">
        <path
          fill="currentColor"
          d="M5 12a1 1 0 0 1 1-1h9.586l-2.293-2.293a1 1 0 0 1 1.414-1.414l4.707 4.707-4.707 4.707a1 1 0 0 1-1.414-1.414L15.586 13H6a1 1 0 0 1-1-1Z"
        />
      </svg>
    </a>
    {project.caseStudy && (
      <a
        class="inline-flex items-center justify-center gap-3 rounded-full border border-accent/25 bg-surface-overlay/80 px-4 py-2 text-sm font-semibold text-neutral-emphasis transition duration-200 ease-spring-out hover:border-accent hover:text-accent-light focus-visible:outline-none"
        href={project.caseStudy}
      >
        Read case study
        <svg class="h-[clamp(1.75rem,3.5vw,2rem)] w-[clamp(1.75rem,3.5vw,2rem)]" viewBox="0 0 24 24" aria-hidden="true" focusable="false">
          <path
            fill="currentColor"
            d="M12 4a1 1 0 0 1 1 1v6l3.553 2.133a1 1 0 1 1-1.006 1.734l-4-2.4A1 1 0 0 1 11 11V5a1 1 0 0 1 1-1Z"
          />
          <path
            fill="currentColor"
            d="M5 5a3 3 0 0 1 3-3h8a3 3 0 0 1 3 3v14a3 3 0 0 1-3 3H8a3 3 0 0 1-3-3V5Zm3-1a1 1 0 0 0-1 1v14a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V5a1 1 0 0 0-1-1H8Z"
          />
        </svg>
      </a>
    )}
  </footer>
</article>
